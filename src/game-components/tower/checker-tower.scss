@import '/src/assets/scss/variables-mixins.scss';
$i: 7;
$ratio: (7: .7, 6: .6, 8: .8);

#king-mark {
    font-family: $font-main;
    font-size: 1.6rem;
    font-weight: 600;
    z-index: 400;
    margin-bottom: 10px;
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
}
.checker-tower {
    @include flex(center, center);
    @include checker();
    @include before();
    z-index: 100;
    transition: all .3s;
    &.mandatory-tower {
        animation: mandatory infinite .6s;
    }
    
    .white-piece, .black-piece {
        @include checker(8);
        @include transformWithScale(.6, 8);
    }
    
    @for $var from 6 to 9 {
        &.ratio-#{$var} {
            $m: map-get($ratio, $var);
                // @debug $m;
            .white-checker, .black-checker {
                @include flex(center, center);
                @include checker(8);
                .king-mark {
                    @extend #king-mark;
                    top: 50%;
                }
                &::after {
                    content: '';
                    width: 70%;
                    height: 70%;
                    border-radius: 50%;
                    box-shadow: 0 0 5px 2px gray, inset 0 0 5px 2px gray;
                    z-index: 10;
                }
            }
            &.board-10 {
                
                @include checker(10, $m);
                .white-piece, .black-piece {
                    @include checker(10);
                    @include transformWithScale(.6, 10);
                }
                .white-checker, .black-checker {
                    @include flex(center, center);
                    @include checker(10, $m);
                }
            }
        }
    }
    &.board-10 {
        @include checker(10);
        .white-piece, .black-piece {
            @include checker(10);
            @include transformWithScale(.6, 10);
        }
        .white-checker, .black-checker {
            @include flex(center, center);
            @include checker(10);
        }
    }
  
    .white-checker {
        background-color: white;
    }
    .black-checker {
        background-color: black;
        .king-mark {
            color: white
        }
    }
    &.towers {
        .tower-wrapper {
            position: relative;
            width: 0;
            height: 0;
        }
    }
    .numbers-on-hover {
        position: absolute;
        display: flex;
        flex-direction: column;
        right: -30px;
        top: -30px;
        z-index: 300;
        opacity: 0;
        height: 40px;
        .white-top, .black-top, .white-down, .black-down {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 20px;
            width: 20px;
            font-size: 1rem;
            border-radius: 50%;
        }
        .white-down, .white-top {
            background-color: white;
            color: black;
            border: 1px solid black;
        }
        .black-down, .black-top {
            background-color: black;
            color: white;
            border: 1px solid white
        } 
    }
    &:hover {
        .numbers-on-hover {
            opacity: 1;
            transition: all .3s;
        }
    }
    
    .white-piece, .black-piece {
        left: 0;
        @include flex(center, center);
        &:first-of-type {
            &::after {
                content: '';
                width: 70%;
                height: 70%;
                border-radius: 50%;
                box-shadow: 0 0 5px 2px gray, inset 0 0 5px 2px gray;
                z-index: 10;
                margin-bottom: 10px;
            }
        }
        .king-mark {
            @extend #king-mark;
        }
    }
    
    .white-piece::before, .black-piece::before {
        content: '';
        @include checker();
        top: $beforeTop;
        left: 0;
    }
    
    .white-piece {
        background-color: white;
        .king-mark {
            color: black;
        }
        &::before {
            background-color: white;
            border-bottom: 2px solid rgb(50, 50, 50);
        }
    }
    
    .black-piece {
        background-color: black;
        .king-mark {
            color: white;
        }
        &::before {
            background-color: black;
            border-bottom: 2px solid lightgray;
        }
    }
    
    @for $i from 0 to 16 {
        .black-piece.up#{$i}, .white-piece.up#{$i} {
            top: -$i * $multy - $beforeTop / 2;
            z-index: 200 + $i * 2;
        }
        .black-piece.down#{$i}, .white-piece.down#{$i} {
            top: $i * $multy - $beforeTop / 2;
            z-index: 200 - $i * 2;
        }
    }
}

@keyframes mandatory {
    0% {
        transform: rotate(0) translateY(0);
    }
    10% {
        transform: rotate(5deg) translateY(2px);
    }
    20% {
        transform: rotate(0) translateY(5px);
    }
    30% {
        transform: rotate(-5deg) translateY(2px);
    }
    40% {
        transform: rotate(0) translateY(0);
    }
    100% {
        transform: rotate(0) translateY(0);
    }
}
